{
  // Place your dpl-react workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  "Functional component": {
    "scope": "typescriptreact",
    "prefix": "fc",
    "body": [
      "import * as React from \"react\";",
      "import { FC } from \"react\";",
      "",
      "export interface ${1:component}Props {}",
      "",
      "const ${1:component}: FC<${1:component}Props> = ({}) => {",
      "return (",
      "<>",
      "Hello",
      "</>",
      ");",
      "};",
      "",
      "export default ${1:component};"
    ],
    "description": "Creates a skeleton for a new functional component in dpl-react style"
  },
  "String literal variable": {
    "scope": "typescriptreact",
    "prefix": "slv",
    "body": [
      "${${1:variable}}"
    ],
    "description": "Formats a varaible to be used in a string literal"
  },
  "consolelog": {
    "scope": "typescriptreact",
    "prefix": "cs",
    "body": [
      "console.log(${1:variable});"
    ],
    "description": "Writes console.log();"
  },
  "UseEffect": {
    "scope": "typescriptreact",
    "prefix": "ue",
    "body": [
      "useEffect(() => {",
      "console.log(${1:variable})",
      "},",
      "[${1:variable}]);"
    ],
    "description": "Writes basic useeffect"
  },
  "usestate": {
    "scope": "typescriptreact",
    "prefix": "us",
    "body": [
      "const [${1:variable}, set${1:variable}] = useState()"
    ],
    "description": "Writes basic usestate"
  },
  "debugger": {
    "scope": "typescriptreact",
    "prefix": "db",
    "body": [
      "debugger;"
    ],
    "description": "Writes basic usestate"
  },
  "usetext": {
    "scope": "typescriptreact",
    "prefix": "usetext",
    "body": [
      "const t = useText();"
    ],
    "description": "Writes basic usestate"
  },
  "dplargtype": {
    "prefix": "argtypes dpl",
    "body": [
      "$1: {",
      "defaultValue: \"$2\",",
      "control: { type: \"text\" }",
      "}"
    ],
    "description": "dplargtype temp"
  }
}