# itk-version: 3.1.0
version: "3"

networks:
  frontend:
    external: true
  app:
    driver: bridge
    internal: false

services:
  mariadb:
    image: itkdev/mariadb:latest
    networks:
      - app
    ports:
      - '3306'
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_USER=db
      - MYSQL_PASSWORD=db
      - MYSQL_DATABASE=db
      #- ENCRYPT=1 # Uncomment to enable database encryption.

  phpfpm:
    image: itkdev/php8.1-fpm:latest
    networks:
      - app
    environment:
      - PHP_XDEBUG_MODE=${PHP_XDEBUG_MODE:-off}
      - PHP_MAX_EXECUTION_TIME=30
      - PHP_MEMORY_LIMIT=256M
      # Uncomment below to enable mailhog.
      # - PHP_SENDMAIL_PATH=/usr/local/bin/mhsendmail --smtp-addr="mailhog:1025"
      - DOCKER_HOST_DOMAIN=${COMPOSE_DOMAIN}
      - COMPOSER_VERSION=2
      - PHP_IDE_CONFIG=serverName=localhost
    depends_on:
      - mariadb
    volumes:
      - .:/app

  nginx:
    image: nginxinc/nginx-unprivileged:alpine
    networks:
      - app
      - frontend
    depends_on:
      - phpfpm
      - engine
    ports:
      - '8080'
    volumes:
      - ./.docker/vhost.conf:/etc/nginx/conf.d/default.conf:ro
      - .:/app
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_DOMAIN}`)"
  #      HTTPS config - uncomment to enable redirect from :80 to :443
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  engine:
    image: node:18
    networks:
      - app
    working_dir: /app
    environment:
      - NODE_ENV=development
    volumes:
      - ./engine:/app
    command: npm run dev

  frontend:
    image: node:18
    command: npm run watch
    networks:
      - app
    working_dir: /app
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app

  logstash:
    image: docker.elastic.co/logstash/logstash:7.9.1
    networks:
      - app
    ports:
      - '28777'
    volumes:
      - ./.docker/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./.docker/jvm.options:/usr/share/logstash/config/jvm.options:ro
      - .docker/pipeline:/usr/share/logstash/pipeline:ro

  redis:
    image: 'redis:6'
    networks:
      - app
    ports:
      - '6379'

  memcached:
    image: 'memcached:latest'
    networks:
      - app
    ports:
      - '11211'
    environment:
      - MEMCACHED_CACHE_SIZE=64

  cypress:
    image: cypress/included:12.7.0
    networks:
      - app
      - frontend
    environment:
      - CYPRESS_VIDEO=false
    volumes:
      - .:/e2e
      - /tmp/.X11-unix:/tmp/.X11-unix
    working_dir: /e2e
    entrypoint: cypress
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"

  mailhog:
    image: itkdev/mailhog
    networks:
      - app
      - frontend
    ports:
      - "1025"
      - "8025"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}Mailhog.rule=Host(`mailhog-${COMPOSE_DOMAIN}`)"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}Mailhog.loadbalancer.server.port=8025"
